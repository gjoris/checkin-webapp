// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package eu.droidit.blog.checkin.controller;

import eu.droidit.blog.checkin.controller.ApplicationConversionServiceFactoryBean;
import eu.droidit.blog.checkin.model.CheckinUser;
import eu.droidit.blog.checkin.model.Profile;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<CheckinUser, String> ApplicationConversionServiceFactoryBean.getCheckinUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<eu.droidit.blog.checkin.model.CheckinUser, java.lang.String>() {
            public String convert(CheckinUser checkinUser) {
                return new StringBuilder().append(checkinUser.getUserName()).append(' ').append(checkinUser.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, CheckinUser> ApplicationConversionServiceFactoryBean.getIdToCheckinUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, eu.droidit.blog.checkin.model.CheckinUser>() {
            public eu.droidit.blog.checkin.model.CheckinUser convert(java.lang.Long id) {
                return CheckinUser.findCheckinUser(id);
            }
        };
    }
    
    public Converter<String, CheckinUser> ApplicationConversionServiceFactoryBean.getStringToCheckinUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, eu.droidit.blog.checkin.model.CheckinUser>() {
            public eu.droidit.blog.checkin.model.CheckinUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CheckinUser.class);
            }
        };
    }
    
    public Converter<Profile, String> ApplicationConversionServiceFactoryBean.getProfileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<eu.droidit.blog.checkin.model.Profile, java.lang.String>() {
            public String convert(Profile profile) {
                return new StringBuilder().append(profile.getFirstName()).append(' ').append(profile.getLastName()).append(' ').append(profile.getDateOfBirth()).append(' ').append(profile.getComments()).toString();
            }
        };
    }
    
    public Converter<Long, Profile> ApplicationConversionServiceFactoryBean.getIdToProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, eu.droidit.blog.checkin.model.Profile>() {
            public eu.droidit.blog.checkin.model.Profile convert(java.lang.Long id) {
                return Profile.findProfile(id);
            }
        };
    }
    
    public Converter<String, Profile> ApplicationConversionServiceFactoryBean.getStringToProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, eu.droidit.blog.checkin.model.Profile>() {
            public eu.droidit.blog.checkin.model.Profile convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Profile.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCheckinUserToStringConverter());
        registry.addConverter(getIdToCheckinUserConverter());
        registry.addConverter(getStringToCheckinUserConverter());
        registry.addConverter(getProfileToStringConverter());
        registry.addConverter(getIdToProfileConverter());
        registry.addConverter(getStringToProfileConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
